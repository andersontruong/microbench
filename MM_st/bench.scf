module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi32>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi32>>, #dlti.dl_entry<f80, dense<128> : vector<2xi32>>, #dlti.dl_entry<i64, dense<64> : vector<2xi32>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi32>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi32>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi32>>, #dlti.dl_entry<f128, dense<128> : vector<2xi32>>, #dlti.dl_entry<f64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i32, dense<32> : vector<2xi32>>, #dlti.dl_entry<i16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i8, dense<8> : vector<2xi32>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i32>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu", "polygeist.target-cpu" = "x86-64", "polygeist.target-features" = "+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87", "polygeist.tune-cpu" = "generic"} {
  llvm.mlir.global internal constant @str0("_ticks: %llu\0A\00") {addr_space = 0 : i32}
  llvm.func @printf(!llvm.ptr, ...) -> i32
  func.func @loop(%arg0: i32, %arg1: memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>} {
    %c2 = arith.constant 2 : index
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c7_i32 = arith.constant 7 : i32
    %c0_i32 = arith.constant 0 : i32
    %0 = llvm.mlir.zero : !llvm.ptr
    scf.for %arg2 = %c0 to %c2 step %c1 {
      %1 = scf.while (%arg3 = %arg1) : (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>> {
        %2 = "polygeist.memref2pointer"(%arg3) : (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> !llvm.ptr
        %3 = llvm.icmp "ne" %2, %0 : !llvm.ptr
        scf.condition(%3) %arg3 : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
      } do {
      ^bb0(%arg3: memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>):
        %2 = "polygeist.memref2pointer"(%arg3) : (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> !llvm.ptr
        llvm.store %c7_i32, %2 : i32, !llvm.ptr
        %3 = llvm.getelementptr %2[0, 21] : (!llvm.ptr) -> !llvm.ptr, !llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>
        %4 = llvm.load %3 : !llvm.ptr -> memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
        scf.yield %4 : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
      }
    }
    return %c0_i32 : i32
  }
  func.func @main(%arg0: i32, %arg1: memref<?xmemref<?xi8>>) -> i32 attributes {llvm.linkage = #llvm.linkage<external>} {
    %c0_i64 = arith.constant 0 : i64
    %c32768 = arith.constant 32768 : index
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c100_i32 = arith.constant 100 : i32
    %c10000_i32 = arith.constant 10000 : i32
    %0 = llvm.mlir.undef : i32
    %1 = arith.andi %arg0, %c10000_i32 : i32
    %2 = "polygeist.typeSize"() <{source = !llvm.struct<"polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"polygeist@mlir@struct.ll">>)>}> : () -> index
    %3 = arith.divui %2, %2 : index
    %alloc = memref.alloc(%3) : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
    %4 = scf.for %arg2 = %c0 to %c32768 step %c1 iter_args(%arg3 = %alloc) -> (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) {
      %13 = arith.index_cast %arg2 : index to i32
      %14 = "polygeist.memref2pointer"(%arg3) : (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> !llvm.ptr
      llvm.store %13, %14 : i32, !llvm.ptr
      %15 = llvm.getelementptr %14[0, 21] : (!llvm.ptr) -> !llvm.ptr, !llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>
      %alloc_0 = memref.alloc(%3) : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
      llvm.store %alloc_0, %15 : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>, !llvm.ptr
      %16 = llvm.load %15 : !llvm.ptr -> memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
      scf.yield %16 : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
    }
    %5 = "polygeist.memref2pointer"(%4) : (memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> !llvm.ptr
    llvm.store %c100_i32, %5 : i32, !llvm.ptr
    %6 = llvm.getelementptr %5[0, 21] : (!llvm.ptr) -> !llvm.ptr, !llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>
    %7 = llvm.mlir.zero : !llvm.ptr
    %8 = "polygeist.pointer2memref"(%7) : (!llvm.ptr) -> memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>
    llvm.store %8, %6 : memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>, !llvm.ptr
    %9 = call @loop(%1, %alloc) : (i32, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll", (i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, memref<?x!llvm.struct<"opaque@polygeist@mlir@struct.ll">>)>>) -> i32
    %10 = llvm.mlir.addressof @str0 : !llvm.ptr
    %11 = llvm.getelementptr %10[0, 0] : (!llvm.ptr) -> !llvm.ptr, !llvm.array<14 x i8>
    %12 = llvm.call @printf(%11, %c0_i64) vararg(!llvm.func<i32 (ptr, ...)>) : (!llvm.ptr, i64) -> i32
    return %0 : i32
  }
}
